#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/
LinkedListNode<int> * reverseLL(LinkedListNode<int> *head){

    LinkedListNode<int> *prev = NULL;
    LinkedListNode<int> *curr = head;

    while(curr!=NULL){
        LinkedListNode<int> *currkanext = curr->next;
        curr->next = prev;
        prev= curr;
        curr = currkanext;
    }

    return prev;
}


bool isPalindrome(LinkedListNode<int> *head) {

    LinkedListNode<int> *temp = head;

    int sz=0;
    while(temp!=NULL){
        temp = temp->next;
        sz++;
    }
    
    LinkedListNode<int> *slow = head;
    LinkedListNode<int> *fast = head;

    while(fast!=NULL && fast->next!=NULL){
        slow = slow->next;
        fast = fast->next->next;
    }

    if(sz%2==1){
        LinkedListNode<int> *reversehead = reverseLL(slow->next);
        
        int count=sz/2;

        while(count>0){
            if(head->data!=reversehead->data){
                return false;
            }
            head = head->next;
            reversehead = reversehead->next;
            --count;
        }
 
        return true;
    }
    else{
        LinkedListNode<int> *reversehead = reverseLL(slow);

        int count=sz/2;

        while(count>0){
            if(head->data!=reversehead->data){
                return false;
            }
            head = head->next;
            reversehead = reversehead->next;
            --count;
        }
 
        return true;
    }
}